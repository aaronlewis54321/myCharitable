{"version":3,"sources":["serviceWorker.js","components/navigation/HeroNav.js","components/landing/HeroSection.js","components/navigation/Footer.js","assests/Card.js","components/landing/LandingContent.js","pages/LandingPage.js","components/navigation/NavBar.js","components/signup/RegistrationSuccess.js","components/signup/RegistrationForm.js","pages/SignUp.js","assests/CardItem.js","components/accounthome/InventoryView.js","components/login/Login.js","pages/AccountHome.js","pages/CheckOut.js","index.js"],"names":["Boolean","window","location","hostname","match","HeroNav","Container","fluid","Row","Col","xs","md","icon","size","Nav","defaultActiveKey","as","className","to","Item","outline","color","Component","HeroSection","type","duration","delay","style","textAlign","marginTop","rounded","fontSize","textDecoration","Footer","Date","getFullYear","href","Card","width","src","this","props","imagePic","waves","name","LandingContent","id","marginBottom","alt","LandingPage","NavBar","toggleCollapse","setState","isOpen","state","bind","dark","expand","onClick","navbar","right","RegistrationSuccess","firstName","RegistrationForm","email","lastName","phoneNumber","password","ebtNumber","modal","modalMessage","handleChange","handleSubmit","toggle","event","target","value","document","getElementsByName","addEventListener","keyCode","preventDefault","md5","require","passwordHash","substring","fetch","encodeURIComponent","createUserResponse","json","createUserJson","console","log","status","callback","onSubmit","label","group","validate","error","success","required","onChange","SignUp","callBackFromSignUp","dataFromChild","formOrsuccess","CardItem","quantity","foodName","desc","addToCart","InventoryView","cardsToDisplay","loading","itemList","cartTable","cartString","checkoutLink","clearCart","checkout","description","push","notify","show","background","text","class","role","getItemsResponse","getItemsJson","items","length","cards","i","marginLeft","Login","retrieveUserResponse","retrieveUserJson","fname","AccountHome","callBackFromAccountHome","CheckOut","linkToCart","params","isloggedin","cart","setCartResponse","alert","ReactDOM","render","exact","path","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf078d8f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { MDBIcon, MDBBtn, MDBNavItem, MDBNavLink } from 'mdbreact';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\n\r\n\r\n\r\nclass HeroNav extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs={3} md={7}>\r\n                            <MDBIcon icon=\"utensils\" size=\"3x\" />\r\n                        </Col>\r\n                        <Col xs={9} md={5}>\r\n                            <Nav defaultActiveKey=\"/home\" as=\"ul\" className=\"justify-content-end\">\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink to=\"/signup\">Sign Up</MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink to=\"/login\">Log In</MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <Nav.Item as=\"li\">\r\n                                    <MDBBtn outline color=\"white\" size=\"sm\"><Link to=\"/#whatwedo\" className=\"whatwedolink\">What We Do?</Link></MDBBtn>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeroNav;","import React, { Component } from 'react';\r\nimport { MDBJumbotron, MDBContainer, MDBCol, MDBRow, MDBAnimation, MDBNavLink, MDBBtn } from 'mdbreact';\r\nimport HeroNav from '../navigation/HeroNav';\r\n\r\nclass HeroSection extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"hero-section\">\r\n                <MDBAnimation type=\"fadeIn\" duration=\"1s\">\r\n                    <MDBJumbotron fluid>\r\n                        <MDBAnimation type=\"fadeIn\" duration=\"1s\" delay=\"0.5s\">\r\n                            <MDBContainer>\r\n                                <HeroNav />\r\n                                <MDBRow style={{ textAlign: 'center', marginTop: '15%' }}>\r\n                                    <MDBCol md=\"2\"></MDBCol>\r\n                                    <MDBCol md=\"8\">\r\n                                        <h1>Welcome to MyCharitable</h1>\r\n                                        <hr></hr>\r\n                                        <h3>An Easy Way to Claim Your Meals</h3>\r\n                                        <MDBBtn rounded outline color=\"white\" style={{ marginTop: '2%' }}><MDBNavLink to=\"/signup\" className=\"getstartedlink\" style={{ fontSize: '0.8em', textDecoration: 'none', color: 'white' }}>Get Registered</MDBNavLink></MDBBtn>\r\n                                    </MDBCol>\r\n                                    <MDBCol md=\"2\"></MDBCol>\r\n                                </MDBRow>\r\n                            </MDBContainer>\r\n                        </MDBAnimation>\r\n                    </MDBJumbotron>\r\n                </MDBAnimation>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeroSection;","import React, { Component } from 'react';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBFooter color=\" indigo lighten-2\" className=\"font-small pt-4 mt-4\">\r\n                    <MDBContainer fluid className=\"text-center\">\r\n                        <MDBRow>\r\n                            <MDBCol md=\"12\">\r\n                                <h6>Thanks for using MyCharitable!</h6>\r\n                                <p>Glad We Can Help!</p>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                    <div className=\"footer-copyright text-center py-3\">\r\n                        <MDBContainer fluid>\r\n                            &copy; {new Date().getFullYear()} Copyright: <a href=\"#!\"> MyCharitable </a>\r\n                        </MDBContainer>\r\n                    </div>\r\n                </MDBFooter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport {MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardImage} from 'mdbreact';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBCard style={{ width: \"100%\" }}>\r\n                    <MDBCardImage className=\"img-fluid\" src={this.props.imagePic} waves />\r\n                    <MDBCardBody>\r\n                        <MDBCardTitle>{this.props.name}</MDBCardTitle>\r\n                        <MDBCardText>\r\n                            Some quick example text to build on the card title and make\r\n                            up the bulk of the card&apos;s content.\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport { MDBCol, MDBContainer, MDBRow } from 'mdbreact';\r\nimport Card from '../../assests/Card';\r\n\r\n\r\nclass LandingContent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBContainer>\r\n                    <h3 style={{ marginTop: '5%', textAlign: 'center' }} id=\"whatwedo\">What We Do</h3>\r\n                    <MDBRow style={{ marginTop: '5%', marginBottom: '5%' }}>\r\n                        <MDBCol md=\"4\">\r\n                            <img src=\"/adult-barista.jpg\" className=\"img-fluid maincontentimage\" alt=\"\" />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"8\" style={{ marginTop: '5%', marginBottom: '5%' }}>\r\n                            <h4>Purpose</h4>\r\n                            <hr></hr>\r\n                            <p>myCharitable is a service that allows restaurants to donate meals to in need\r\n                                individuals, verified by EBT, in real time. Restaurants often over estimate how much\r\n                                food they need to make in a given time period, and that food goes to waste. Other\r\n                                times, they want to donate but it seems like a big task to coordinate with a charity. </p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <hr></hr>\r\n                    <MDBRow style={{ marginTop: '5%', marginBottom: '5%' }}>\r\n                        <MDBCol md=\"8\" style={{ marginTop: '5%', marginBottom: '5%' }}>\r\n                            <h4>Process</h4>\r\n                            <hr></hr>\r\n                            <p>myCharitable allows the restaurant to alert the customer that there is an available \r\n                                meal and allows the customer to claim that meal and pick it up using their \r\n                                myCharitable card. The business is then able to track the donations they have given\r\n                                and can write them off on their taxes at the end of each year. </p>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" xs=\"12\">\r\n                            <img src=\"/man-on-phone.jpg\" className=\"img-fluid maincontentimage\" alt=\"\" />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <hr></hr>\r\n                    <MDBRow style={{ marginTop: '5%', marginBottom: '5%' }}>\r\n                        <MDBCol md=\"4\">\r\n                            <img src=\"/parents-with-kid.jpg\" className=\"img-fluid maincontentimage\" alt=\"\" />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"8\" style={{ marginTop: '5%', marginBottom: '5%' }}>\r\n                            <h4>People</h4>\r\n                            <hr></hr>\r\n                            <p>myCharitable fills a need- currently, there is no incentive for restaurants to accept \r\n                                EBT, and it varies by state. myCharitable benefits in need individuals by providing \r\n                                them with meals, benefits the companies by giving them tax incentives, and \r\n                                benefits the environment by reducing food waste. myCharitable has an immense \r\n                                potential to improve the communities it serves. </p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n\r\n                <MDBContainer style={{ marginBottom: '10%' }}>\r\n                    <h3 style={{ marginTop: '5%', textAlign: 'center' }} id=\"whatwedo\">Who We Are</h3>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"3\" style={{ marginTop: '5%' }}>\r\n                            <Card imagePic=\"/Naymish.jpg\" name=\"Naymish\" />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\" style={{ marginTop: '5%' }}>\r\n                            <Card imagePic=\"/Aaron.jpg\" name=\"Aaron\" />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\" style={{ marginTop: '5%' }}>\r\n                            <Card imagePic=\"/DJ.PNG\" name=\"DJ\" />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\" style={{ marginTop: '5%' }}>\r\n                            <Card imagePic=\"/Adam.jpeg\" name=\"Adam\" />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingContent;","import React, { Component } from 'react';\r\nimport HeroSection from '../components/landing/HeroSection';\r\nimport Footer from '../components/navigation/Footer';\r\nimport LandingContent from '../components/landing/LandingContent';\r\n\r\nclass LandingPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeroSection />\r\n                <LandingContent />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\nimport {\r\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        }\r\n        this.toggleCollapse = this.toggleCollapse.bind(this);\r\n    }\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBNavbar color=\" indigo lighten-2\" dark expand=\"md\">\r\n                    <MDBNavbarBrand>\r\n                        <strong className=\"white-text\">MyCharitable</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                    <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/login\">Log In</MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/signup\">Sign Up</MDBNavLink>\r\n                            </MDBNavItem>\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBNavLink, MDBAnimation } from 'mdbreact';\r\n\r\nclass RegistrationSuccess extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBAnimation type=\"fadeIn\" duration=\"1s\">\r\n                    <MDBContainer style={{marginTop: '5%', marginBottom: '20%'}}>\r\n                        <MDBRow>\r\n                            <h4>Thanks for registering, {this.props.firstName}!</h4>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                            <p>You can go to the following link in order to login to you account.</p>\r\n                            <br></br>\r\n                            <MDBNavLink to=\"/login\">Login</MDBNavLink>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                </MDBAnimation>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegistrationSuccess;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBAnimation, MDBBtn, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact';\r\nimport RegistrationSuccess from './RegistrationSuccess';\r\n\r\nclass RegistrationForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            password: '',\r\n            ebtNumber: '',\r\n            modal: false,\r\n            modalMessage: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        var field = document.getElementsByName(name);\r\n\r\n        field[0].addEventListener('keypress', function (event) {\r\n            var key = event.keyCode;\r\n            if (key === 32) {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        var md5 = require('md5');\r\n        var passwordHash = md5(this.state.password).substring(0, 6);\r\n        const createUserResponse = await fetch(`/api/users/createUser?email=${encodeURIComponent(this.state.email)}&password=${encodeURIComponent(passwordHash)}&fName=${encodeURIComponent(this.state.firstName)}&lName=${encodeURIComponent(this.state.lastName)}&phoneNumber=${encodeURIComponent(\"+1\" + this.state.phoneNumber)}&ebtNumber=${encodeURIComponent(this.state.ebtNumber)}`);\r\n        const createUserJson = await createUserResponse.json();\r\n        console.log(createUserJson);\r\n        if(createUserJson.status === 500) {\r\n            this.setState({ modalMessage: 'An account with that email already exists. Please use another email.'});\r\n            this.toggle();\r\n        } else {\r\n            this.props.callback(<RegistrationSuccess firstName={this.state.firstName} />)\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBAnimation type=\"fadeIn\" duration=\"1s\">\r\n                    <MDBContainer>\r\n                        <h3 style={{ textAlign: \"center\", marginTop: '5%' }}>Sign Up!</h3>\r\n\r\n                        <MDBAnimation type=\"fadeIn\" duration=\"1s\" delay=\"0.5s\">\r\n                            <MDBRow style={{ marginTop: '5%' }}>\r\n                                <MDBCol md=\"12\" style={{ textAlign: 'center' }}>\r\n                                    <h5>Your Login Info</h5>\r\n                                    <hr></hr>\r\n                                    <p>Here you will input your account information. This will be the information you use to actually log in to your account.</p>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBAnimation>\r\n                        <MDBAnimation type=\"fadeIn\" duration=\"1s\" delay=\"1s\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <MDBRow style={{ marginTop: '5%' }} className=\"justify-content-center\">\r\n                                    <MDBCol md=\"8\">\r\n                                        <MDBRow>\r\n                                            <MDBCol md=\"6\">\r\n                                                <MDBInput\r\n                                                    label=\"First Name*\"\r\n                                                    icon=\"user\"\r\n                                                    group\r\n                                                    type=\"text\"\r\n                                                    validate\r\n                                                    error=\"wrong\"\r\n                                                    success=\"right\"\r\n                                                    name=\"firstName\"\r\n                                                    required\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </MDBCol>\r\n                                            <MDBCol md=\"6\">\r\n                                                <MDBInput\r\n                                                    label=\"Last Name*\"\r\n                                                    group\r\n                                                    type=\"text\"\r\n                                                    validate\r\n                                                    error=\"wrong\"\r\n                                                    success=\"right\"\r\n                                                    name=\"lastName\"\r\n                                                    required\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                        <MDBRow>\r\n                                            <MDBCol md=\"12\">\r\n                                                <MDBInput\r\n                                                    label=\"Email*\"\r\n                                                    icon=\"at\"\r\n                                                    group\r\n                                                    type=\"email\"\r\n                                                    validate\r\n                                                    error=\"wrong\"\r\n                                                    success=\"right\"\r\n                                                    name=\"email\"\r\n                                                    required\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                                <MDBInput\r\n                                                    label=\"Password*\"\r\n                                                    icon=\"lock\"\r\n                                                    group\r\n                                                    type=\"password\"\r\n                                                    validate\r\n                                                    error=\"wrong\"\r\n                                                    success=\"right\"\r\n                                                    name=\"password\"\r\n                                                    required\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                                <MDBInput\r\n                                                    label=\"Phone Number*\"\r\n                                                    icon=\"phone\"\r\n                                                    group\r\n                                                    type=\"text\"\r\n                                                    validate\r\n                                                    error=\"wrong\"\r\n                                                    success=\"right\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    required\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                                <MDBInput\r\n                                                    label=\"EBT Number*\"\r\n                                                    icon=\"address-card\"\r\n                                                    group\r\n                                                    type=\"text\"\r\n                                                    validate\r\n                                                    error=\"wrong\"\r\n                                                    success=\"right\"\r\n                                                    name=\"ebtNumber\"\r\n                                                    required\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </MDBCol>\r\n                                        </MDBRow>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow className=\"justify-content-center\" style={{ marginBottom: '5%' }}>\r\n                                    <MDBBtn color=\" indigo lighten-1\" type=\"submit\" style={{color: 'white'}}>Register</MDBBtn>\r\n                                </MDBRow>\r\n                            </form>\r\n                        </MDBAnimation>\r\n                    </MDBContainer>\r\n                </MDBAnimation>\r\n\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <MDBModalHeader toggle={this.toggle}><span style={{ color: 'black' }}>Oops!</span></MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <span style={{ color: 'black' }}>{this.state.modalMessage}\r\n                            <br></br>\r\n                            <br></br>\r\n                            Wish you the best!\r\n                            </span>\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn color=\"danger\" onClick={this.toggle}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegistrationForm;","import React, { Component } from 'react';\r\nimport NavBar from '../components/navigation/NavBar';\r\nimport RegistrationForm from '../components/signup/RegistrationForm';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formOrsuccess: <RegistrationForm callback={this.callBackFromSignUp}/>\r\n        }\r\n        this.callBackFromSignUp = this.callBackFromSignUp.bind(this);\r\n    }\r\n\r\n    callBackFromSignUp = (dataFromChild) => {\r\n        this.setState({\r\n            formOrsuccess: dataFromChild\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar/>\r\n                {this.state.formOrsuccess}\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardImage, MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nclass CardItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quantity: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        var field = document.getElementsByName(name);\r\n\r\n        field[0].addEventListener('keypress', function (event) {\r\n            var key = event.keyCode;\r\n            if (key === 32) {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBCard style={{ width: \"100%\" }}>\r\n                    <MDBCardImage className=\"img-fluid\" src=\"https://mdbootstrap.com/img/Photos/Others/images/43.jpg\" waves />\r\n                    <MDBCardBody>\r\n                        <MDBCardTitle>{this.props.foodName}</MDBCardTitle>\r\n                        <MDBCardText>\r\n                            {this.props.desc}\r\n                            <hr></hr>\r\n                            <MDBInput\r\n                                label=\"Quantity\"\r\n                                icon=\"hashtag\"\r\n                                group\r\n                                type=\"number\"\r\n                                validate\r\n                                error=\"wrong\"\r\n                                success=\"right\"\r\n                                name=\"quantity\"\r\n                                required\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <MDBBtn color=\"green darken-4\" onClick={() => this.props.addToCart(this.props.foodName, this.props.desc, this.state.quantity)}>Add to Cart</MDBBtn>\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardItem;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBAnimation, MDBCol, MDBIcon, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader, MDBBtn, MDBTable, MDBTableHead, MDBTableBody, MDBNavLink } from 'mdbreact';\r\nimport CardItem from '../../assests/CardItem';\r\nimport Notifications, { notify } from 'react-notify-toast';\r\n\r\nclass InventoryView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardsToDisplay: [],\r\n            loading: '',\r\n            itemList: [],\r\n            modal: false,\r\n            cartTable: [],\r\n            cartString: '',\r\n            checkoutLink: ''\r\n        }\r\n        this.toggle = this.toggle.bind(this);\r\n        this.addToCart = this.addToCart.bind(this);\r\n        this.clearCart = this.clearCart.bind(this);\r\n        this.checkout = this.checkout.bind(this);\r\n    }\r\n\r\n\r\n    toggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    checkout() {\r\n\r\n    }\r\n\r\n    clearCart() {\r\n        var cartTableTemp = [];\r\n        this.setState({ cartTable: cartTableTemp });\r\n    }\r\n\r\n    addToCart(name, description, quantity) {\r\n        this.state.cartTable.push(<tr><td>1</td><td>{name}</td><td>{description}</td><td>{quantity}</td></tr>);\r\n        let myColor = { background: '#25D366', text: \"#FFFFFF\" };\r\n        this.setState({\r\n            cartString: this.state.cartString + \", \" + name\r\n        })\r\n        notify.show(\"Added \" + quantity + \" \" + name + \"(s) to your cart!\", \"custom\", 5000, myColor);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ loading: <div class=\"spinner-border\" role=\"status\"><span class=\"sr-only\">Loading...</span></div> });\r\n        const getItemsResponse = await fetch(`/api/itemlist/getInventory`);\r\n        const getItemsJson = await getItemsResponse.json();\r\n        this.setState({\r\n            checkoutLink: \"/qrCode/\" + encodeURIComponent(this.props.email) + \"/true/\" + this.state.cartString\r\n        })\r\n        this.setState({ loading: '' });\r\n        this.setState({ itemList: getItemsJson.items });\r\n        console.log(getItemsJson);\r\n        console.log(this.state.itemList.length);\r\n        var cards = []\r\n        for (var i = 0; i < this.state.itemList.length; i++) {\r\n            cards.push(<MDBCol md=\"3\" xs=\"12\" style={{ marginTop: '5%' }}><CardItem foodName={this.state.itemList[i].name} desc={this.state.itemList[i].description} addToCart={this.addToCart}></CardItem></MDBCol>);\r\n        }\r\n        this.setState({\r\n            cardsToDisplay: cards\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Notifications />\r\n                <MDBAnimation type=\"fadeIn\" duration=\"1s\">\r\n                    <MDBContainer style={{ marginBottom: '10%' }}>\r\n                        <MDBAnimation type=\"fadeIn\" duration=\"1s\" delay=\"0.5s\">\r\n                            <MDBRow style={{ marginTop: '5%' }}>\r\n                                <MDBCol>\r\n                                    <h3>Welcome, {this.props.firstName}!</h3>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <MDBRow style={{ marginTop: '5%' }}>\r\n                                <MDBCol>\r\n                                    <h4>Current Items Around You: {this.state.loading}</h4>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBAnimation>\r\n                        <MDBAnimation type=\"fadeIn\" duration=\"1s\" delay=\"1s\">\r\n                            <MDBRow>\r\n                                {this.state.cardsToDisplay}\r\n                            </MDBRow>\r\n\r\n                        </MDBAnimation>\r\n                    </MDBContainer>\r\n                    <div className=\"bottomright shoppingcarticon\">\r\n                        <MDBIcon icon=\"shopping-cart\" className=\"white-text\" onClick={this.toggle}></MDBIcon>\r\n                    </div>\r\n                </MDBAnimation>\r\n\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <MDBModalHeader toggle={this.toggle}><span style={{ color: 'black' }} className=\"shoppingcart\">Shopping Cart</span></MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <span style={{ color: 'black' }}>\r\n                            <MDBTable>\r\n                                <MDBTableHead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Name</th>\r\n                                        <th>Description</th>\r\n                                        <th>Quantity</th>\r\n                                    </tr>\r\n                                </MDBTableHead>\r\n                                <MDBTableBody>\r\n                                    {this.state.cartTable}\r\n                                </MDBTableBody>\r\n                            </MDBTable>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <MDBRow>\r\n                                <MDBBtn color=\"danger\" onClick={this.clearCart} style={{marginLeft:'3%'}}>Clear Cart</MDBBtn>\r\n                            </MDBRow>\r\n                            Wish you the best!\r\n                        </span>\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn color=\"success\"><MDBNavLink to={this.state.checkoutLink}>Checkout!</MDBNavLink></MDBBtn>\r\n                        <MDBBtn color=\"danger\" onClick={this.toggle}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InventoryView;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBAnimation, MDBBtn, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact';\r\nimport InventoryView from '../accounthome/InventoryView';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            modal: false,\r\n            modalMessage: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        var field = document.getElementsByName(name);\r\n\r\n        field[0].addEventListener('keypress', function (event) {\r\n            var key = event.keyCode;\r\n            if (key === 32) {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        var md5 = require('md5');\r\n        var passwordHash = md5(this.state.password).substring(0, 6);\r\n        const retrieveUserResponse = await fetch(`/api/users/getUser?email=${encodeURIComponent(this.state.email)}&password=${encodeURIComponent(passwordHash)}`);\r\n        const retrieveUserJson = await retrieveUserResponse.json();\r\n        console.log(retrieveUserJson);\r\n        if(retrieveUserJson.status === 404) {\r\n            this.setState({ modalMessage: 'This user email does not exist! Please go to the sign up page to create an account.'});\r\n            this.toggle();\r\n        } else if (retrieveUserJson.status === 403) {\r\n            this.setState({ modalMessage: 'You have entered the incorrect password. Please try again.'});\r\n            this.toggle();\r\n        } else {\r\n                //console.log(\"should run callback\");\r\n                this.props.callback(<InventoryView firstName={retrieveUserJson.fname} email={retrieveUserJson.email}/>);\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBAnimation type=\"fadeIn\" duration=\"1s\">\r\n                    <MDBContainer style={{marginBottom: '20%'}}>\r\n                        <h3 style={{ textAlign: \"center\", marginTop: '5%' }}>Log In!</h3>\r\n\r\n                        <MDBAnimation type=\"fadeIn\" duration=\"1s\" delay=\"0.5s\">\r\n                            <MDBRow style={{ marginTop: '5%' }}>\r\n                                <MDBCol md=\"12\" style={{ textAlign: 'center' }}>\r\n                                    <h5>Enter Login Info</h5>\r\n                                    <hr></hr>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBAnimation>\r\n                        <MDBAnimation type=\"fadeIn\" duration=\"1s\" delay=\"1s\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <MDBRow style={{ marginTop: '5%' }} className=\"justify-content-center\">\r\n                                    <MDBCol md=\"8\">\r\n                                        <MDBInput\r\n                                            label=\"Email*\"\r\n                                            icon=\"at\"\r\n                                            group\r\n                                            type=\"email\"\r\n                                            validate\r\n                                            error=\"wrong\"\r\n                                            success=\"right\"\r\n                                            name=\"email\"\r\n                                            required\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        <MDBInput\r\n                                            label=\"Password*\"\r\n                                            icon=\"lock\"\r\n                                            group\r\n                                            type=\"password\"\r\n                                            validate\r\n                                            error=\"wrong\"\r\n                                            success=\"right\"\r\n                                            name=\"password\"\r\n                                            required\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow className=\"justify-content-center\" style={{ marginBottom: '10%' }}>\r\n                                    <MDBBtn color=\"indigo lighten-1\" type=\"submit\" style={{color: 'white'}}>Login</MDBBtn>\r\n                                </MDBRow>\r\n                            </form>\r\n                        </MDBAnimation>\r\n                    </MDBContainer>\r\n                </MDBAnimation>\r\n\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <MDBModalHeader toggle={this.toggle}><span style={{ color: 'black' }}>Oops!</span></MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <span style={{ color: 'black' }}>{this.state.modalMessage}\r\n                            <br></br>\r\n                            <br></br>\r\n                            Wish you the best!\r\n                            </span>\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn color=\"danger\" onClick={this.toggle}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport Login from '../components/login/Login';\r\nimport NavBar from '../components/navigation/NavBar';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nclass AccountHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formOrsuccess: <Login callback={this.callBackFromAccountHome}/>\r\n        }\r\n        this.callBackFromAccountHome = this.callBackFromAccountHome.bind(this);\r\n    }\r\n\r\n    callBackFromAccountHome = (dataFromChild) => {\r\n        this.setState({\r\n            formOrsuccess: dataFromChild\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar/>\r\n                {this.state.formOrsuccess}\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountHome;","import React, { Component } from 'react';\r\nimport QRCode from 'qrcode.react';\r\nimport NavBar from '../components/navigation/NavBar';\r\nimport Footer from '../components/navigation/Footer';\r\n\r\nclass CheckOut extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            linkToCart: ''\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { email } = this.props.match.params;\r\n        const { isloggedin } = this.props.match.params;\r\n        const { cart } = this.props.match.params;\r\n\r\n        console.log(\"Email: \" + email + \"   isLoggedIn: \" + isloggedin + \"   cart: \" + cart);\r\n\r\n        const setCartResponse = fetch(`/api/users/setCart?email=${encodeURIComponent(email)}&isLoggedIn=${encodeURIComponent(isloggedin)}&cart=${encodeURIComponent(cart)}`);\r\n        const setCartJson = await setCartResponse.json();\r\n        if(setCartJson.status === 403) {\r\n            alert('You must be logged in!');\r\n        } else {\r\n            const getCartResponse = await fetch(`/api/users/getCart?email=${encodeURIComponent(email)}`);\r\n            this.setState({\r\n                linkToCart: \"http://mycharitable.eastus.cloudapp.azure.com:8080/api/users/getCart?email=\" + email\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <QRCode value={this.state.linkToCart} />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckOut;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, HashRouter as Router, Switch} from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport SignUp from './pages/SignUp';\nimport AccountHome from './pages/AccountHome';\nimport CheckOut from './pages/CheckOut';\n\nfunction App() {\n    return (\n        <div>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/signup\" component={SignUp} />\n                    <Route exact path=\"/login\" component={AccountHome} />\n                    <Route exact path=\"/qrCode/:email/:isloggedin/:cart\" component={CheckOut} />\n                </Switch>\n            </Router>\n\n        </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}